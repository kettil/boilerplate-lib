{
  "name": "boilerplate-lib",
  "version": "0.0.1",
  "description": "",
  "main": "build/index.js",
  "types": "build/index.d.ts",
  "private": true,
  "scripts": {
    "build": "npm run build:clean && npm run build:generate",
    "build:clean": "rm -rf ./build",
    "build:generate": "tsc --project ./tsconfig.build.json",
    "test": "jest --config=jest.json --coverage 'src'",
    "test:watch": "jest --config=jest.json --watch 'src'",
    "test:ci": "jest --config=jest.json --ci --coverage --verbose 'src'",
    "test:functional": "jest --config=jest.test.js --runInBand --coverage 'tests'; echo ''",
    "test:functional:watch": "jest --config=jest.test.js --runInBand --watch 'tests'; echo ''",
    "test:functional:ci": "jest --config=jest.test.js --ci --runInBand --verbose 'tests'",
    "test:all": "npm run test && npm run test:functional",
    "coverage": "npm run coverage:clean && npm run coverage:generate:unit",
    "coverage:functional": "npm run coverage:clean && npm run coverage:generate:functional",
    "coverage:clean": "rm -rf ./coverage",
    "coverage:generate:unit": "jest --config=jest.coverage.js --coverage 'src'",
    "coverage:generate:integration": "jest --config=jest.coverage.js --coverage 'tests/integration'",
    "coverage:generate:functional": "jest --config=jest.coverage.js --coverage --runInBand 'tests'; echo ''",
    "lint": "npm run prettier && npm run lint:check",
    "lint:check": "eslint --config .eslintrc.json --format codeframe --ext=jsx,ts,tsx --fix .",
    "lint:ci": "eslint --config .eslintrc.json --format codeframe --ext=jsx,ts,tsx .",
    "prettier": "prettier --config './.prettierrc' --write '.huskyrc' '.prettierrc' './**/*.{ts,tsx,js,jsx,json,md,scss,yml,html}'",
    "prettier:ci": "prettier --config './.prettierrc' --list-different '.huskyrc' '.prettierrc' './**/*.{ts,tsx,js,jsx,json,md,scss,yml,html}'",
    "deploy:major": "npm run deploy:pre && npm version major -m 'Release of version v%s' && npm run deploy:post",
    "deploy:minor": "npm run deploy:pre && npm version minor -m 'Release of version v%s' && npm run deploy:post",
    "deploy:patch": "npm run deploy:pre && npm version patch -m 'Release of version v%s' && npm run deploy:post",
    "deploy:pre": "npm run lint && test:all && npm run build",
    "deploy:post": "git push && git push --tags && npm publish",
    "docker:start": "docker-compose up -d",
    "docker:stop": "docker-compose down -v",
    "pretest:functional": "npm run docker:start",
    "pretest:functional:watch": "npm run docker:start",
    "precoverage:generate:functional": "npm run docker:start",
    "postdocker:start": "echo 'Wait until all services have initialized...' && sleep 30",
    "posttest:functional": "npm run docker:stop",
    "posttest:functional:watch": "npm run docker:stop",
    "postcoverage:generate:functional": "npm run docker:stop"
  },
  "keywords": [],
  "author": "Kjell Die√üel <development@kettil.de>",
  "license": "MIT",
  "devDependencies": {
    "@types/jest": "^25.0.0",
    "@types/node": "^13.0.0",
    "@typescript-eslint/eslint-plugin": "^2.18.0",
    "@typescript-eslint/parser": "^2.18.0",
    "eslint": "^6.8.0",
    "eslint-config-airbnb": "^18.0.0",
    "eslint-plugin-import": "^2.0.0",
    "eslint-plugin-jsx-a11y": "^6.0.0",
    "eslint-plugin-react": "^7.0.0",
    "eslint-plugin-react-hooks": "^2.0.0",
    "eslint-plugin-unicorn": "^16.0.0",
    "husky": "^4.0.0",
    "jest": "^25.0.0",
    "prettier": "^1.0.0",
    "ts-jest": "^25.0.0",
    "typescript": "^3.4.0"
  },
  "dependencies": {}
}
